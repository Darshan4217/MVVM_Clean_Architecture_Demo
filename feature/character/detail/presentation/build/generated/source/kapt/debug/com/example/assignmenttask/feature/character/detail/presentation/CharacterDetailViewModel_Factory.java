// Generated by Dagger (https://dagger.dev).
package com.example.assignmenttask.feature.character.detail.presentation;

import com.example.assignmenttask.feature.character.detail.domain.usecase.GetCharacterByIdUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class CharacterDetailViewModel_Factory implements Factory<CharacterDetailViewModel> {
  private final Provider<GetCharacterByIdUseCase> getCharacterByIdUseCaseProvider;

  public CharacterDetailViewModel_Factory(
      Provider<GetCharacterByIdUseCase> getCharacterByIdUseCaseProvider) {
    this.getCharacterByIdUseCaseProvider = getCharacterByIdUseCaseProvider;
  }

  @Override
  public CharacterDetailViewModel get() {
    return newInstance(getCharacterByIdUseCaseProvider.get());
  }

  public static CharacterDetailViewModel_Factory create(
      Provider<GetCharacterByIdUseCase> getCharacterByIdUseCaseProvider) {
    return new CharacterDetailViewModel_Factory(getCharacterByIdUseCaseProvider);
  }

  public static CharacterDetailViewModel newInstance(
      GetCharacterByIdUseCase getCharacterByIdUseCase) {
    return new CharacterDetailViewModel(getCharacterByIdUseCase);
  }
}
