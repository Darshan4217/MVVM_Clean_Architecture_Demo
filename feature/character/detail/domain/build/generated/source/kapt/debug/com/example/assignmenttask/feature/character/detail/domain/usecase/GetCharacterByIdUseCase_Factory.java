// Generated by Dagger (https://dagger.dev).
package com.example.assignmenttask.feature.character.detail.domain.usecase;

import com.example.assignmenttask.feature.character.detail.domain.repository.CharacterDetailRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class GetCharacterByIdUseCase_Factory implements Factory<GetCharacterByIdUseCase> {
  private final Provider<CharacterDetailRepository> repositoryProvider;

  public GetCharacterByIdUseCase_Factory(Provider<CharacterDetailRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetCharacterByIdUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetCharacterByIdUseCase_Factory create(
      Provider<CharacterDetailRepository> repositoryProvider) {
    return new GetCharacterByIdUseCase_Factory(repositoryProvider);
  }

  public static GetCharacterByIdUseCase newInstance(CharacterDetailRepository repository) {
    return new GetCharacterByIdUseCase(repository);
  }
}
