// Generated by Dagger (https://dagger.dev).
package com.example.assignmenttask.feature.character.list.presentation;

import com.example.assignmenttask.feature.character.list.domain.usecase.GetCharactersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class CharacterListViewModel_Factory implements Factory<CharacterListViewModel> {
  private final Provider<GetCharactersUseCase> getCharactersUseCaseProvider;

  public CharacterListViewModel_Factory(
      Provider<GetCharactersUseCase> getCharactersUseCaseProvider) {
    this.getCharactersUseCaseProvider = getCharactersUseCaseProvider;
  }

  @Override
  public CharacterListViewModel get() {
    return newInstance(getCharactersUseCaseProvider.get());
  }

  public static CharacterListViewModel_Factory create(
      Provider<GetCharactersUseCase> getCharactersUseCaseProvider) {
    return new CharacterListViewModel_Factory(getCharactersUseCaseProvider);
  }

  public static CharacterListViewModel newInstance(GetCharactersUseCase getCharactersUseCase) {
    return new CharacterListViewModel(getCharactersUseCase);
  }
}
